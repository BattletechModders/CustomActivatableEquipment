Word,Count
{,34
+,30
},29
=,16
if,14
static,11
the,11
to,10
public,10
\"\\n"\);\,10
\Log.LogWrite("\\,7
\"\\,6
heat,6
!=,5
is,5
assembly,5
in,5
path,4
void,4
sink,4
else,4
this,3
Version,3
>,3
an,3
__instance),3
Postfix(Mech,3
\[HarmonyPatch("\InitStats"\)]\,3
class,3
of,3
return,3
you,3
null),3
CustomActivatableEquipment.Core.Epsilon),3
__instance.ActiveDefaultComponents();,3
Type[],3
string,3
[HarmonyPatch(new,3
})],3
[HarmonyPatch(MethodType.Normal)],3
==,3
num,3
following,3
false;,2
*=,2
};,2
&&,2
(mech.occupiedDesignMask.heatSinkMultiplier),2
*,2
attribute,2
\multiplier:"\\,2
<,2
\dissipation:"\\,2
1f)),2
values,2
component,2
null,2
ActivatableComponent,2
VFX,2
activatable.FailFlatChance),2
new,2
not,2
\Dictionary<string,\,2
can,2
sinks,2
activate,2
type,2
Revision,2
COM,2
activatable,2
foreach,2
component.componentDef.GetComponent<ActivatableComponent>();,2
for,2
\null\n"\);\,2
ComVisible,2
activatable.FailFlatChance;,2
that,2
information,2
Build,2
set,2
apath,1
position,1
shown,1
(float)Math.Round(((double)OnlineHeatDissipation,1
this.spawnedObject.GetComponent<ParticleSystem>();,1
\activatable\n"\);\,1
\stringBuilder.Append("\Mech\,1
int,1
(this.AutoActivateOnOverheatLevel,1
specify,1
obj);,1
float,1
[HarmonyPatch(typeof(Mech))],1
OnlineHeatDissipation,1
Core.currentActiveComponentsDlg.Add(activatable);,1
Major,1
Minor,1
return;,1
\Log.LogWrite("\Mech.GetHeatSinkDissipation:"\\,1
ActiveDefaultComponents(this,1
\__result+"\\n"\);\,1
\Path.Combine(Log.m_logfile,\,1
General,1
Log.LogWrite(e.ToString(),1
combat,1
comes,1
Offline,1
'*',1
unit),1
\"\:"\+__instance.GUID+"\\n"\);\,1
GameObject>();,1
using,1
(this.AutoActivateOnHeat,1
component.applyImpactTempMask(fakeWeapon);,1
\assets:"\\,1
on,1
(new,1
true);,1
associated,1
(activateEffect,1
measure,1
var,1
component.ActivateVFX();,1
project,1
\COM,\,1
true),1
Numbers,1
{continue;},1
(OnlineHeatDissipation),1
Turret_InitStats,1
(double)mech.Combat.Constants.Heat.GlobalHeatSinkMultiplier)));,1
\Log.LogWrite("\asset\,1
code,1
need,1
(failChance,1
be,1
Heat,1
controlled,1
[HarmonyPatch(typeof(Turret))],1
\stringBuilder.Append("\Temporary\,1
what,1
\load:"\\,1
visible,1
catch,1
try,1
as,1
(activatable.AutoActivateOnHeat,1
Log.m_logfile,1
assetName);,1
\Dictionary<string,List<ComponentToggle>>\,1
\ActivatableComponent.activateComponent(component,\,1
\AssemblyVersion("\1.0.*"\)]\,1
assetName,1
modify,1
e),1
true,1
\become:"\\,1
mech.occupiedDesignMask.heatSinkMultiplier;,1
activated,1
default,1
makes,1
\was:"\+__result);\,1
Number,1
false),1
miscComponent.getCCGUID(),1
want,1
System.Uri(Assembly.GetExecutingAssembly().CodeBase)).AbsolutePath;,1
dedicated,1
currentActiveComponentsDlg,1
__instance.DisplayName,1
manualy,1
(Exception,1
\"\CustomAmmoCategories.log"\);\,1
types,1
Core.Settings.AdditionalAssets),1
assetBundle,1
\AdditinalFXObjects.Add(obj.name,\,1
List<ActivatableComponent>();,1
consists,1
If,1
\multiplyer:"\\,1
\!Mathf.Approximately(mech.occupiedDesignMask.heatSinkMultiplier,\,1
You,1
know,1
\stringBuilder.Append("\Biome\,1
Mech_InitStats,1
\ActivatableComponent.setComponentFailChance(component,\,1
activateEffect.SpawnSelf(component.parent.Combat);,1
m_assemblyFile;,1
four,1
UnityEngine.GameObject[],1
can't,1
access,1
Core.Settings.AdditionalAssets.Count,1
objects),1
((double)num,1
dissipation,1
AbstractActor,1
component.AoEExplodeComponent();,1
continue;,1
no,1
GameObject>,1
\stringBuilder.Append("\Online\,1
<=,1
but,1
(mech.occupiedDesignMask,1
through,1
The,1
\hit\n"\);\,1
\Path.Combine(directory,\,1
(var,1
0),1
Core.currentActiveComponentsDlg.Clear();,1
chance,1
activateEffect,1
ParticleSystem,1
component.defId,1
false,1
i'm,1
mech.Combat.MapMetaData.biomeDesignMask.heatSinkMultiplier;,1
don't,1
\Log.LogWrite("\additional\,1
component.Stop(true);,1
[HarmonyPatch(typeof(Vehicle))],1
and,1
values:,1
Vehicle_InitStats,1
(mech.Combat.MapMetaData.biomeDesignMask,1
typelib,1
obj.name,1
if(chance,1
assetBundle.name,1
1f;,1
with,1
AdditinalFXObjects,1
true;,1
private,1
ObjectSpawnDataSelf,1
attributes,1
(activatable,1
(File.Exists(path)),1
activatable.FailFlatChance);,1
if(activatable.ActiveByDefault,1
by,1
(component.IsFunctional,1
\found:"\\,1
\"\:"\\,1
\!Mathf.Approximately(mech.Combat.MapMetaData.biomeDesignMask.heatSinkMultiplier,\,1
\loaded\n"\);\,1
components,1
AssetBundle.LoadFromFile(path);,1
do,1
locations,1
failChance,1
(UnityEngine.Object)null),1
Information,1
\this.Combat.DataManager.PoolGameObject(this.prefabName,\,1
\Path.Combine(apath,\,1
\exists:"\\,1
sertanly,1
tot,1
((UnityEngine.Object)component,1
\Log.LogWrite("\not\,1
all,1
objects,1
\Log.LogWrite("\fail\,1
exposed,1
or,1
\Log.LogWrite("\FX\,1
GUID,1
this.spawnedObject.SetActive(false);,1
(activatable.FailDamageLocations.Length,1
here,1
(assetBundle,1
these,1
mechlab.MechLab.activeMechDef,1
List<ActivatableComponent>,1
a,1
Log.m_assemblyFile,1
assetBundle.LoadAllAssets<GameObject>();,1
if(activatable.CanBeactivatedManualy),1
foreach(MechComponent,1
unit.allComponents),1
about,1
(mech.Combat.Constants.Heat.GlobalHeatSinkMultiplier),1
Change,1
this.spawnedObject);,1
from,1
obj,1
\"\+component.defId+"\\,1
ID,1
\objects:\n"\);\,1
(string,1
mech.HeatSinkCapacity,1
below:,1
\stringBuilder.Append("\Global\,1
\"\assets"\);\,1
Setting,1
[assembly:,1
